#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxiteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_UserRoleRelationship(oxite_UserRoleRelationship instance);
    partial void Updateoxite_UserRoleRelationship(oxite_UserRoleRelationship instance);
    partial void Deleteoxite_UserRoleRelationship(oxite_UserRoleRelationship instance);
    partial void Insertoxite_AreaRoleRelationship(oxite_AreaRoleRelationship instance);
    partial void Updateoxite_AreaRoleRelationship(oxite_AreaRoleRelationship instance);
    partial void Deleteoxite_AreaRoleRelationship(oxite_AreaRoleRelationship instance);
    partial void Insertoxite_BackgroundServiceAction(oxite_BackgroundServiceAction instance);
    partial void Updateoxite_BackgroundServiceAction(oxite_BackgroundServiceAction instance);
    partial void Deleteoxite_BackgroundServiceAction(oxite_BackgroundServiceAction instance);
    partial void Insertoxite_CommentMessageRelationship(oxite_CommentMessageRelationship instance);
    partial void Updateoxite_CommentMessageRelationship(oxite_CommentMessageRelationship instance);
    partial void Deleteoxite_CommentMessageRelationship(oxite_CommentMessageRelationship instance);
    partial void Insertoxite_CommentRelationship(oxite_CommentRelationship instance);
    partial void Updateoxite_CommentRelationship(oxite_CommentRelationship instance);
    partial void Deleteoxite_CommentRelationship(oxite_CommentRelationship instance);
    partial void Insertoxite_PostAreaRelationship(oxite_PostAreaRelationship instance);
    partial void Updateoxite_PostAreaRelationship(oxite_PostAreaRelationship instance);
    partial void Deleteoxite_PostAreaRelationship(oxite_PostAreaRelationship instance);
    partial void Insertoxite_PostTagRelationship(oxite_PostTagRelationship instance);
    partial void Updateoxite_PostTagRelationship(oxite_PostTagRelationship instance);
    partial void Deleteoxite_PostTagRelationship(oxite_PostTagRelationship instance);
    partial void Insertoxite_Role(oxite_Role instance);
    partial void Updateoxite_Role(oxite_Role instance);
    partial void Deleteoxite_Role(oxite_Role instance);
    partial void Insertoxite_SubscriptionAnonymous(oxite_SubscriptionAnonymous instance);
    partial void Updateoxite_SubscriptionAnonymous(oxite_SubscriptionAnonymous instance);
    partial void Deleteoxite_SubscriptionAnonymous(oxite_SubscriptionAnonymous instance);
    partial void Insertoxite_UserFileResourceRelationship(oxite_UserFileResourceRelationship instance);
    partial void Updateoxite_UserFileResourceRelationship(oxite_UserFileResourceRelationship instance);
    partial void Deleteoxite_UserFileResourceRelationship(oxite_UserFileResourceRelationship instance);
    partial void Insertoxite_Post(oxite_Post instance);
    partial void Updateoxite_Post(oxite_Post instance);
    partial void Deleteoxite_Post(oxite_Post instance);
    partial void Insertoxite_FileResource(oxite_FileResource instance);
    partial void Updateoxite_FileResource(oxite_FileResource instance);
    partial void Deleteoxite_FileResource(oxite_FileResource instance);
    partial void Insertoxite_StringResource(oxite_StringResource instance);
    partial void Updateoxite_StringResource(oxite_StringResource instance);
    partial void Deleteoxite_StringResource(oxite_StringResource instance);
    partial void Insertoxite_StringResourceVersion(oxite_StringResourceVersion instance);
    partial void Updateoxite_StringResourceVersion(oxite_StringResourceVersion instance);
    partial void Deleteoxite_StringResourceVersion(oxite_StringResourceVersion instance);
    partial void Insertoxite_Trackback(oxite_Trackback instance);
    partial void Updateoxite_Trackback(oxite_Trackback instance);
    partial void Deleteoxite_Trackback(oxite_Trackback instance);
    partial void Insertoxite_Subscription(oxite_Subscription instance);
    partial void Updateoxite_Subscription(oxite_Subscription instance);
    partial void Deleteoxite_Subscription(oxite_Subscription instance);
    partial void Insertoxite_Tag(oxite_Tag instance);
    partial void Updateoxite_Tag(oxite_Tag instance);
    partial void Deleteoxite_Tag(oxite_Tag instance);
    partial void Insertoxite_Message(oxite_Message instance);
    partial void Updateoxite_Message(oxite_Message instance);
    partial void Deleteoxite_Message(oxite_Message instance);
    partial void Insertoxite_MessageToAnonymous(oxite_MessageToAnonymous instance);
    partial void Updateoxite_MessageToAnonymous(oxite_MessageToAnonymous instance);
    partial void Deleteoxite_MessageToAnonymous(oxite_MessageToAnonymous instance);
    partial void Insertoxite_MessageTo(oxite_MessageTo instance);
    partial void Updateoxite_MessageTo(oxite_MessageTo instance);
    partial void Deleteoxite_MessageTo(oxite_MessageTo instance);
    partial void Insertoxite_Language(oxite_Language instance);
    partial void Updateoxite_Language(oxite_Language instance);
    partial void Deleteoxite_Language(oxite_Language instance);
    partial void Insertoxite_UserLanguage(oxite_UserLanguage instance);
    partial void Updateoxite_UserLanguage(oxite_UserLanguage instance);
    partial void Deleteoxite_UserLanguage(oxite_UserLanguage instance);
    partial void Insertoxite_CommentAnonymous(oxite_CommentAnonymous instance);
    partial void Updateoxite_CommentAnonymous(oxite_CommentAnonymous instance);
    partial void Deleteoxite_CommentAnonymous(oxite_CommentAnonymous instance);
    partial void Insertoxite_Comment(oxite_Comment instance);
    partial void Updateoxite_Comment(oxite_Comment instance);
    partial void Deleteoxite_Comment(oxite_Comment instance);
    partial void Insertoxite_User(oxite_User instance);
    partial void Updateoxite_User(oxite_User instance);
    partial void Deleteoxite_User(oxite_User instance);
    partial void Insertoxite_PostRelationship(oxite_PostRelationship instance);
    partial void Updateoxite_PostRelationship(oxite_PostRelationship instance);
    partial void Deleteoxite_PostRelationship(oxite_PostRelationship instance);
    partial void Insertoxite_Area(oxite_Area instance);
    partial void Updateoxite_Area(oxite_Area instance);
    partial void Deleteoxite_Area(oxite_Area instance);
    #endregion
		
		public OxiteDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<oxite_UserRoleRelationship> oxite_UserRoleRelationships
		{
			get
			{
				return this.GetTable<oxite_UserRoleRelationship>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_AreaRoleRelationship> oxite_AreaRoleRelationships
		{
			get
			{
				return this.GetTable<oxite_AreaRoleRelationship>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_BackgroundServiceAction> oxite_BackgroundServiceActions
		{
			get
			{
				return this.GetTable<oxite_BackgroundServiceAction>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_CommentMessageRelationship> oxite_CommentMessageRelationships
		{
			get
			{
				return this.GetTable<oxite_CommentMessageRelationship>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_CommentRelationship> oxite_CommentRelationships
		{
			get
			{
				return this.GetTable<oxite_CommentRelationship>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_PostAreaRelationship> oxite_PostAreaRelationships
		{
			get
			{
				return this.GetTable<oxite_PostAreaRelationship>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_PostTagRelationship> oxite_PostTagRelationships
		{
			get
			{
				return this.GetTable<oxite_PostTagRelationship>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Role> oxite_Roles
		{
			get
			{
				return this.GetTable<oxite_Role>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_SubscriptionAnonymous> oxite_SubscriptionAnonymous
		{
			get
			{
				return this.GetTable<oxite_SubscriptionAnonymous>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_UserFileResourceRelationship> oxite_UserFileResourceRelationships
		{
			get
			{
				return this.GetTable<oxite_UserFileResourceRelationship>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Post> oxite_Posts
		{
			get
			{
				return this.GetTable<oxite_Post>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_FileResource> oxite_FileResources
		{
			get
			{
				return this.GetTable<oxite_FileResource>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_StringResource> oxite_StringResources
		{
			get
			{
				return this.GetTable<oxite_StringResource>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_StringResourceVersion> oxite_StringResourceVersions
		{
			get
			{
				return this.GetTable<oxite_StringResourceVersion>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Trackback> oxite_Trackbacks
		{
			get
			{
				return this.GetTable<oxite_Trackback>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Subscription> oxite_Subscriptions
		{
			get
			{
				return this.GetTable<oxite_Subscription>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Tag> oxite_Tags
		{
			get
			{
				return this.GetTable<oxite_Tag>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Message> oxite_Messages
		{
			get
			{
				return this.GetTable<oxite_Message>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_MessageToAnonymous> oxite_MessageToAnonymous
		{
			get
			{
				return this.GetTable<oxite_MessageToAnonymous>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_MessageTo> oxite_MessageTos
		{
			get
			{
				return this.GetTable<oxite_MessageTo>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Language> oxite_Languages
		{
			get
			{
				return this.GetTable<oxite_Language>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_UserLanguage> oxite_UserLanguages
		{
			get
			{
				return this.GetTable<oxite_UserLanguage>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_CommentAnonymous> oxite_CommentAnonymous
		{
			get
			{
				return this.GetTable<oxite_CommentAnonymous>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_Comment> oxite_Comments
		{
			get
			{
				return this.GetTable<oxite_Comment>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_User> oxite_Users
		{
			get
			{
				return this.GetTable<oxite_User>();
			}
		}
		
		internal System.Data.Linq.Table<oxite_PostRelationship> oxite_PostRelationships
		{
			get
			{
				return this.GetTable<oxite_PostRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Area> oxite_Areas
		{
			get
			{
				return this.GetTable<oxite_Area>();
			}
		}
		
		[Function(Name="dbo.oxite_GetRecentlyPublishedPostsAndBackgroundServiceActions")]
		internal ISingleResult<oxite_GetRecentlyPublishedPostsAndBackgroundServiceActionsResult> oxite_GetRecentlyPublishedPostsAndBackgroundServiceActions([Parameter(Name="TypeID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> typeID, [Parameter(Name="StartDateRange", DbType="DateTime")] System.Nullable<System.DateTime> startDateRange, [Parameter(Name="EndDateRange", DbType="DateTime")] System.Nullable<System.DateTime> endDateRange)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, startDateRange, endDateRange);
			return ((ISingleResult<oxite_GetRecentlyPublishedPostsAndBackgroundServiceActionsResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.oxite_UserRoleRelationship")]
	[DataContract()]
	public partial class oxite_UserRoleRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private System.Guid _RoleID;
		
		private EntityRef<oxite_Role> _oxite_Role;
		
		private EntityRef<oxite_User> _oxite_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public oxite_UserRoleRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._oxite_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Role_oxite_UserRoleRelationship", Storage="_oxite_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public oxite_Role oxite_Role
		{
			get
			{
				return this._oxite_Role.Entity;
			}
			set
			{
				oxite_Role previousValue = this._oxite_Role.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Role.Entity = null;
						previousValue.oxite_UserRoleRelationships.Remove(this);
					}
					this._oxite_Role.Entity = value;
					if ((value != null))
					{
						value.oxite_UserRoleRelationships.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Role");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_UserRoleRelationship", Storage="_oxite_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_UserRoleRelationships.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_UserRoleRelationships.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Role = default(EntityRef<oxite_Role>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_AreaRoleRelationship")]
	[DataContract()]
	public partial class oxite_AreaRoleRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AreaID;
		
		private System.Guid _RoleID;
		
		private EntityRef<oxite_Role> _oxite_Role;
		
		private EntityRef<oxite_Area> _oxite_Area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreaIDChanging(System.Guid value);
    partial void OnAreaIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public oxite_AreaRoleRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_AreaID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					if (this._oxite_Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._oxite_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Role_oxite_AreaRoleRelationship", Storage="_oxite_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public oxite_Role oxite_Role
		{
			get
			{
				return this._oxite_Role.Entity;
			}
			set
			{
				oxite_Role previousValue = this._oxite_Role.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Role.Entity = null;
						previousValue.oxite_AreaRoleRelationships.Remove(this);
					}
					this._oxite_Role.Entity = value;
					if ((value != null))
					{
						value.oxite_AreaRoleRelationships.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Role");
				}
			}
		}
		
		[Association(Name="oxite_Area_oxite_AreaRoleRelationship", Storage="_oxite_Area", ThisKey="AreaID", OtherKey="AreaID", IsForeignKey=true)]
		public oxite_Area oxite_Area
		{
			get
			{
				return this._oxite_Area.Entity;
			}
			set
			{
				oxite_Area previousValue = this._oxite_Area.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Area.Entity = null;
						previousValue.oxite_AreaRoleRelationships.Remove(this);
					}
					this._oxite_Area.Entity = value;
					if ((value != null))
					{
						value.oxite_AreaRoleRelationships.Add(this);
						this._AreaID = value.AreaID;
					}
					else
					{
						this._AreaID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Role = default(EntityRef<oxite_Role>);
			this._oxite_Area = default(EntityRef<oxite_Area>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_BackgroundServiceAction")]
	[DataContract()]
	public partial class oxite_BackgroundServiceAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BackgroundServiceActionID;
		
		private System.Guid _TypeID;
		
		private bool _InProgress;
		
		private System.Nullable<System.DateTime> _Started;
		
		private System.Nullable<System.DateTime> _Completed;
		
		private System.Xml.Linq.XElement _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBackgroundServiceActionIDChanging(System.Guid value);
    partial void OnBackgroundServiceActionIDChanged();
    partial void OnTypeIDChanging(System.Guid value);
    partial void OnTypeIDChanged();
    partial void OnInProgressChanging(bool value);
    partial void OnInProgressChanged();
    partial void OnStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedChanged();
    partial void OnCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedChanged();
    partial void OnDetailsChanging(System.Xml.Linq.XElement value);
    partial void OnDetailsChanged();
    #endregion
		
		public oxite_BackgroundServiceAction()
		{
			this.Initialize();
		}
		
		[Column(Storage="_BackgroundServiceActionID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid BackgroundServiceActionID
		{
			get
			{
				return this._BackgroundServiceActionID;
			}
			set
			{
				if ((this._BackgroundServiceActionID != value))
				{
					this.OnBackgroundServiceActionIDChanging(value);
					this.SendPropertyChanging();
					this._BackgroundServiceActionID = value;
					this.SendPropertyChanged("BackgroundServiceActionID");
					this.OnBackgroundServiceActionIDChanged();
				}
			}
		}
		
		[Column(Storage="_TypeID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_InProgress", DbType="Bit NOT NULL")]
		[DataMember(Order=3)]
		public bool InProgress
		{
			get
			{
				return this._InProgress;
			}
			set
			{
				if ((this._InProgress != value))
				{
					this.OnInProgressChanging(value);
					this.SendPropertyChanging();
					this._InProgress = value;
					this.SendPropertyChanged("InProgress");
					this.OnInProgressChanged();
				}
			}
		}
		
		[Column(Storage="_Started", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[Column(Storage="_Completed", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_Details", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=6)]
		public System.Xml.Linq.XElement Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_CommentMessageRelationship")]
	[DataContract()]
	public partial class oxite_CommentMessageRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CommentID;
		
		private System.Guid _MessageID;
		
		private EntityRef<oxite_Message> _oxite_Message;
		
		private EntityRef<oxite_Comment> _oxite_Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    partial void OnMessageIDChanging(System.Guid value);
    partial void OnMessageIDChanged();
    #endregion
		
		public oxite_CommentMessageRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._oxite_Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					if (this._oxite_Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Message_oxite_CommentMessageRelationship", Storage="_oxite_Message", ThisKey="MessageID", OtherKey="MessageID", IsForeignKey=true)]
		public oxite_Message oxite_Message
		{
			get
			{
				return this._oxite_Message.Entity;
			}
			set
			{
				oxite_Message previousValue = this._oxite_Message.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Message.Entity = null;
						previousValue.oxite_CommentMessageRelationships.Remove(this);
					}
					this._oxite_Message.Entity = value;
					if ((value != null))
					{
						value.oxite_CommentMessageRelationships.Add(this);
						this._MessageID = value.MessageID;
					}
					else
					{
						this._MessageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Message");
				}
			}
		}
		
		[Association(Name="oxite_Comment_oxite_CommentMessageRelationship", Storage="_oxite_Comment", ThisKey="CommentID", OtherKey="CommentID", IsForeignKey=true)]
		public oxite_Comment oxite_Comment
		{
			get
			{
				return this._oxite_Comment.Entity;
			}
			set
			{
				oxite_Comment previousValue = this._oxite_Comment.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Comment.Entity = null;
						previousValue.oxite_CommentMessageRelationships.Remove(this);
					}
					this._oxite_Comment.Entity = value;
					if ((value != null))
					{
						value.oxite_CommentMessageRelationships.Add(this);
						this._CommentID = value.CommentID;
					}
					else
					{
						this._CommentID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Comment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Message = default(EntityRef<oxite_Message>);
			this._oxite_Comment = default(EntityRef<oxite_Comment>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_CommentRelationship")]
	[DataContract()]
	public partial class oxite_CommentRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParentCommentID;
		
		private System.Guid _CommentID;
		
		private EntityRef<oxite_Comment> _oxite_Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentCommentIDChanging(System.Guid value);
    partial void OnParentCommentIDChanged();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    #endregion
		
		public oxite_CommentRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ParentCommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid ParentCommentID
		{
			get
			{
				return this._ParentCommentID;
			}
			set
			{
				if ((this._ParentCommentID != value))
				{
					this.OnParentCommentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentCommentID = value;
					this.SendPropertyChanged("ParentCommentID");
					this.OnParentCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._oxite_Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Comment_oxite_CommentRelationship", Storage="_oxite_Comment", ThisKey="CommentID", OtherKey="CommentID", IsForeignKey=true)]
		public oxite_Comment oxite_Comment
		{
			get
			{
				return this._oxite_Comment.Entity;
			}
			set
			{
				oxite_Comment previousValue = this._oxite_Comment.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Comment.Entity = null;
						previousValue.oxite_CommentRelationships.Remove(this);
					}
					this._oxite_Comment.Entity = value;
					if ((value != null))
					{
						value.oxite_CommentRelationships.Add(this);
						this._CommentID = value.CommentID;
					}
					else
					{
						this._CommentID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Comment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Comment = default(EntityRef<oxite_Comment>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_PostAreaRelationship")]
	[DataContract()]
	public partial class oxite_PostAreaRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private System.Guid _AreaID;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
		private EntityRef<oxite_Area> _oxite_Area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnAreaIDChanging(System.Guid value);
    partial void OnAreaIDChanged();
    #endregion
		
		public oxite_PostAreaRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_AreaID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					if (this._oxite_Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostAreaRelationship", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_PostAreaRelationships.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_PostAreaRelationships.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		[Association(Name="oxite_Area_oxite_PostAreaRelationship", Storage="_oxite_Area", ThisKey="AreaID", OtherKey="AreaID", IsForeignKey=true)]
		public oxite_Area oxite_Area
		{
			get
			{
				return this._oxite_Area.Entity;
			}
			set
			{
				oxite_Area previousValue = this._oxite_Area.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Area.Entity = null;
						previousValue.oxite_PostAreaRelationships.Remove(this);
					}
					this._oxite_Area.Entity = value;
					if ((value != null))
					{
						value.oxite_PostAreaRelationships.Add(this);
						this._AreaID = value.AreaID;
					}
					else
					{
						this._AreaID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Post = default(EntityRef<oxite_Post>);
			this._oxite_Area = default(EntityRef<oxite_Area>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_PostTagRelationship")]
	[DataContract()]
	public partial class oxite_PostTagRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private System.Guid _TagID;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
		private EntityRef<oxite_Tag> _oxite_Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    #endregion
		
		public oxite_PostTagRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._oxite_Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostTagRelationship", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_PostTagRelationships.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_PostTagRelationships.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		[Association(Name="oxite_Tag_oxite_PostTagRelationship", Storage="_oxite_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true)]
		public oxite_Tag oxite_Tag
		{
			get
			{
				return this._oxite_Tag.Entity;
			}
			set
			{
				oxite_Tag previousValue = this._oxite_Tag.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Tag.Entity = null;
						previousValue.oxite_PostTagRelationships.Remove(this);
					}
					this._oxite_Tag.Entity = value;
					if ((value != null))
					{
						value.oxite_PostTagRelationships.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Post = default(EntityRef<oxite_Post>);
			this._oxite_Tag = default(EntityRef<oxite_Tag>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_Role")]
	[DataContract()]
	public partial class oxite_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParentRoleID;
		
		private System.Guid _RoleID;
		
		private string _RoleName;
		
		private EntitySet<oxite_UserRoleRelationship> _oxite_UserRoleRelationships;
		
		private EntitySet<oxite_AreaRoleRelationship> _oxite_AreaRoleRelationships;
		
		private EntitySet<oxite_Role> _oxite_Roles;
		
		private EntityRef<oxite_Role> _oxite_Role1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentRoleIDChanging(System.Guid value);
    partial void OnParentRoleIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public oxite_Role()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ParentRoleID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ParentRoleID
		{
			get
			{
				return this._ParentRoleID;
			}
			set
			{
				if ((this._ParentRoleID != value))
				{
					if (this._oxite_Role1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentRoleIDChanging(value);
					this.SendPropertyChanging();
					this._ParentRoleID = value;
					this.SendPropertyChanged("ParentRoleID");
					this.OnParentRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_Role_oxite_UserRoleRelationship", Storage="_oxite_UserRoleRelationships", ThisKey="RoleID", OtherKey="RoleID")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<oxite_UserRoleRelationship> oxite_UserRoleRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_UserRoleRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_UserRoleRelationships;
			}
			set
			{
				this._oxite_UserRoleRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Role_oxite_AreaRoleRelationship", Storage="_oxite_AreaRoleRelationships", ThisKey="RoleID", OtherKey="RoleID")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<oxite_AreaRoleRelationship> oxite_AreaRoleRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_AreaRoleRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_AreaRoleRelationships;
			}
			set
			{
				this._oxite_AreaRoleRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Role_oxite_Role", Storage="_oxite_Roles", ThisKey="RoleID", OtherKey="ParentRoleID")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<oxite_Role> oxite_Roles
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Roles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Roles;
			}
			set
			{
				this._oxite_Roles.Assign(value);
			}
		}
		
		[Association(Name="oxite_Role_oxite_Role", Storage="_oxite_Role1", ThisKey="ParentRoleID", OtherKey="RoleID", IsForeignKey=true)]
		public oxite_Role oxite_Role1
		{
			get
			{
				return this._oxite_Role1.Entity;
			}
			set
			{
				oxite_Role previousValue = this._oxite_Role1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Role1.Entity = null;
						previousValue.oxite_Roles.Remove(this);
					}
					this._oxite_Role1.Entity = value;
					if ((value != null))
					{
						value.oxite_Roles.Add(this);
						this._ParentRoleID = value.RoleID;
					}
					else
					{
						this._ParentRoleID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Role1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_UserRoleRelationships(oxite_UserRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Role = this;
		}
		
		private void detach_oxite_UserRoleRelationships(oxite_UserRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Role = null;
		}
		
		private void attach_oxite_AreaRoleRelationships(oxite_AreaRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Role = this;
		}
		
		private void detach_oxite_AreaRoleRelationships(oxite_AreaRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Role = null;
		}
		
		private void attach_oxite_Roles(oxite_Role entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Role1 = this;
		}
		
		private void detach_oxite_Roles(oxite_Role entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Role1 = null;
		}
		
		private void Initialize()
		{
			this._oxite_UserRoleRelationships = new EntitySet<oxite_UserRoleRelationship>(new Action<oxite_UserRoleRelationship>(this.attach_oxite_UserRoleRelationships), new Action<oxite_UserRoleRelationship>(this.detach_oxite_UserRoleRelationships));
			this._oxite_AreaRoleRelationships = new EntitySet<oxite_AreaRoleRelationship>(new Action<oxite_AreaRoleRelationship>(this.attach_oxite_AreaRoleRelationships), new Action<oxite_AreaRoleRelationship>(this.detach_oxite_AreaRoleRelationships));
			this._oxite_Roles = new EntitySet<oxite_Role>(new Action<oxite_Role>(this.attach_oxite_Roles), new Action<oxite_Role>(this.detach_oxite_Roles));
			this._oxite_Role1 = default(EntityRef<oxite_Role>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_SubscriptionAnonymous")]
	[DataContract()]
	public partial class oxite_SubscriptionAnonymous : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SubscriptionID;
		
		private string _Name;
		
		private string _Email;
		
		private EntityRef<oxite_Subscription> _oxite_Subscription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriptionIDChanging(System.Guid value);
    partial void OnSubscriptionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public oxite_SubscriptionAnonymous()
		{
			this.Initialize();
		}
		
		[Column(Storage="_SubscriptionID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					if (this._oxite_Subscription.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionID = value;
					this.SendPropertyChanged("SubscriptionID");
					this.OnSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Association(Name="oxite_Subscription_oxite_SubscriptionAnonymous", Storage="_oxite_Subscription", ThisKey="SubscriptionID", OtherKey="SubscriptionID", IsForeignKey=true)]
		public oxite_Subscription oxite_Subscription
		{
			get
			{
				return this._oxite_Subscription.Entity;
			}
			set
			{
				oxite_Subscription previousValue = this._oxite_Subscription.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Subscription.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Subscription.Entity = null;
						previousValue.oxite_SubscriptionAnonymous = null;
					}
					this._oxite_Subscription.Entity = value;
					if ((value != null))
					{
						value.oxite_SubscriptionAnonymous = this;
						this._SubscriptionID = value.SubscriptionID;
					}
					else
					{
						this._SubscriptionID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Subscription");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Subscription = default(EntityRef<oxite_Subscription>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_UserFileResourceRelationship")]
	[DataContract()]
	public partial class oxite_UserFileResourceRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private System.Guid _FileResourceID;
		
		private EntityRef<oxite_FileResource> _oxite_FileResource;
		
		private EntityRef<oxite_User> _oxite_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnFileResourceIDChanging(System.Guid value);
    partial void OnFileResourceIDChanged();
    #endregion
		
		public oxite_UserFileResourceRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileResourceID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid FileResourceID
		{
			get
			{
				return this._FileResourceID;
			}
			set
			{
				if ((this._FileResourceID != value))
				{
					if (this._oxite_FileResource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileResourceIDChanging(value);
					this.SendPropertyChanging();
					this._FileResourceID = value;
					this.SendPropertyChanged("FileResourceID");
					this.OnFileResourceIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_FileResource_oxite_UserFileResourceRelationship", Storage="_oxite_FileResource", ThisKey="FileResourceID", OtherKey="FileResourceID", IsForeignKey=true)]
		public oxite_FileResource oxite_FileResource
		{
			get
			{
				return this._oxite_FileResource.Entity;
			}
			set
			{
				oxite_FileResource previousValue = this._oxite_FileResource.Entity;
				if (((previousValue != value) 
							|| (this._oxite_FileResource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_FileResource.Entity = null;
						previousValue.oxite_UserFileResourceRelationships.Remove(this);
					}
					this._oxite_FileResource.Entity = value;
					if ((value != null))
					{
						value.oxite_UserFileResourceRelationships.Add(this);
						this._FileResourceID = value.FileResourceID;
					}
					else
					{
						this._FileResourceID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_FileResource");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_UserFileResourceRelationship", Storage="_oxite_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_UserFileResourceRelationships.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_UserFileResourceRelationships.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_FileResource = default(EntityRef<oxite_FileResource>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_Post")]
	[DataContract()]
	public partial class oxite_Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private System.Guid _CreatorUserID;
		
		private string _Title;
		
		private string _Body;
		
		private string _BodyShort;
		
		private byte _State;
		
		private string _Slug;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private System.DateTime _PublishedDate;
		
		private string _SearchBody;
		
		private EntitySet<oxite_PostAreaRelationship> _oxite_PostAreaRelationships;
		
		private EntitySet<oxite_PostTagRelationship> _oxite_PostTagRelationships;
		
		private EntitySet<oxite_Trackback> _oxite_Trackbacks;
		
		private EntitySet<oxite_Subscription> _oxite_Subscriptions;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntitySet<oxite_PostRelationship> _oxite_PostRelationships;
		
		private EntitySet<oxite_PostRelationship> _oxite_PostRelationships1;
		
		private EntityRef<oxite_User> _oxite_User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnBodyShortChanging(string value);
    partial void OnBodyShortChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnPublishedDateChanging(System.DateTime value);
    partial void OnPublishedDateChanged();
    partial void OnSearchBodyChanging(string value);
    partial void OnSearchBodyChanged();
    #endregion
		
		public oxite_Post()
		{
			this.Initialize();
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_BodyShort", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string BodyShort
		{
			get
			{
				return this._BodyShort;
			}
			set
			{
				if ((this._BodyShort != value))
				{
					this.OnBodyShortChanging(value);
					this.SendPropertyChanging();
					this._BodyShort = value;
					this.SendPropertyChanged("BodyShort");
					this.OnBodyShortChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="TinyInt NOT NULL")]
		[DataMember(Order=6)]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_Slug", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=9)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PublishedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=10)]
		public System.DateTime PublishedDate
		{
			get
			{
				return this._PublishedDate;
			}
			set
			{
				if ((this._PublishedDate != value))
				{
					this.OnPublishedDateChanging(value);
					this.SendPropertyChanging();
					this._PublishedDate = value;
					this.SendPropertyChanged("PublishedDate");
					this.OnPublishedDateChanged();
				}
			}
		}
		
		[Column(Storage="_SearchBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[DataMember(Order=11)]
		public string SearchBody
		{
			get
			{
				return this._SearchBody;
			}
			set
			{
				if ((this._SearchBody != value))
				{
					this.OnSearchBodyChanging(value);
					this.SendPropertyChanging();
					this._SearchBody = value;
					this.SendPropertyChanged("SearchBody");
					this.OnSearchBodyChanged();
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostAreaRelationship", Storage="_oxite_PostAreaRelationships", ThisKey="PostID", OtherKey="PostID")]
		[DataMember(Order=12, EmitDefaultValue=false)]
		public EntitySet<oxite_PostAreaRelationship> oxite_PostAreaRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_PostAreaRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_PostAreaRelationships;
			}
			set
			{
				this._oxite_PostAreaRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostTagRelationship", Storage="_oxite_PostTagRelationships", ThisKey="PostID", OtherKey="PostID")]
		[DataMember(Order=13, EmitDefaultValue=false)]
		public EntitySet<oxite_PostTagRelationship> oxite_PostTagRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_PostTagRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_PostTagRelationships;
			}
			set
			{
				this._oxite_PostTagRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Post_oxite_Trackback", Storage="_oxite_Trackbacks", ThisKey="PostID", OtherKey="PostID")]
		[DataMember(Order=14, EmitDefaultValue=false)]
		public EntitySet<oxite_Trackback> oxite_Trackbacks
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Trackbacks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Trackbacks;
			}
			set
			{
				this._oxite_Trackbacks.Assign(value);
			}
		}
		
		[Association(Name="oxite_Post_oxite_Subscription", Storage="_oxite_Subscriptions", ThisKey="PostID", OtherKey="PostID")]
		[DataMember(Order=15, EmitDefaultValue=false)]
		public EntitySet<oxite_Subscription> oxite_Subscriptions
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Subscriptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Subscriptions;
			}
			set
			{
				this._oxite_Subscriptions.Assign(value);
			}
		}
		
		[Association(Name="oxite_Post_oxite_Comment", Storage="_oxite_Comments", ThisKey="PostID", OtherKey="PostID")]
		[DataMember(Order=16, EmitDefaultValue=false)]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Comments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostRelationship", Storage="_oxite_PostRelationships", ThisKey="PostID", OtherKey="PostID")]
		[DataMember(Order=17, EmitDefaultValue=false)]
		public EntitySet<oxite_PostRelationship> oxite_PostRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_PostRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_PostRelationships;
			}
			set
			{
				this._oxite_PostRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostRelationship1", Storage="_oxite_PostRelationships1", ThisKey="PostID", OtherKey="ParentPostID")]
		[DataMember(Order=18, EmitDefaultValue=false)]
		public EntitySet<oxite_PostRelationship> oxite_PostRelationships1
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_PostRelationships1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_PostRelationships1;
			}
			set
			{
				this._oxite_PostRelationships1.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Post", Storage="_oxite_User", ThisKey="CreatorUserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Posts.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Posts.Add(this);
						this._CreatorUserID = value.UserID;
					}
					else
					{
						this._CreatorUserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_PostAreaRelationships(oxite_PostAreaRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_PostAreaRelationships(oxite_PostAreaRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
		
		private void attach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
		
		private void attach_oxite_Trackbacks(oxite_Trackback entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_Trackbacks(oxite_Trackback entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
		
		private void attach_oxite_Subscriptions(oxite_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_Subscriptions(oxite_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
		
		private void attach_oxite_PostRelationships(oxite_PostRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_PostRelationships(oxite_PostRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
		
		private void attach_oxite_PostRelationships1(oxite_PostRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post1 = this;
		}
		
		private void detach_oxite_PostRelationships1(oxite_PostRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post1 = null;
		}
		
		private void Initialize()
		{
			this._oxite_PostAreaRelationships = new EntitySet<oxite_PostAreaRelationship>(new Action<oxite_PostAreaRelationship>(this.attach_oxite_PostAreaRelationships), new Action<oxite_PostAreaRelationship>(this.detach_oxite_PostAreaRelationships));
			this._oxite_PostTagRelationships = new EntitySet<oxite_PostTagRelationship>(new Action<oxite_PostTagRelationship>(this.attach_oxite_PostTagRelationships), new Action<oxite_PostTagRelationship>(this.detach_oxite_PostTagRelationships));
			this._oxite_Trackbacks = new EntitySet<oxite_Trackback>(new Action<oxite_Trackback>(this.attach_oxite_Trackbacks), new Action<oxite_Trackback>(this.detach_oxite_Trackbacks));
			this._oxite_Subscriptions = new EntitySet<oxite_Subscription>(new Action<oxite_Subscription>(this.attach_oxite_Subscriptions), new Action<oxite_Subscription>(this.detach_oxite_Subscriptions));
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_PostRelationships = new EntitySet<oxite_PostRelationship>(new Action<oxite_PostRelationship>(this.attach_oxite_PostRelationships), new Action<oxite_PostRelationship>(this.detach_oxite_PostRelationships));
			this._oxite_PostRelationships1 = new EntitySet<oxite_PostRelationship>(new Action<oxite_PostRelationship>(this.attach_oxite_PostRelationships1), new Action<oxite_PostRelationship>(this.detach_oxite_PostRelationships1));
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_FileResource")]
	[DataContract()]
	public partial class oxite_FileResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private System.Guid _FileResourceID;
		
		private string _FileResourceName;
		
		private System.Guid _CreatorUserID;
		
		private System.Data.Linq.Binary _Data;
		
		private string _ContentType;
		
		private string _Path;
		
		private byte _State;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<oxite_UserFileResourceRelationship> _oxite_UserFileResourceRelationships;
		
		private EntityRef<oxite_User> _oxite_User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnFileResourceIDChanging(System.Guid value);
    partial void OnFileResourceIDChanged();
    partial void OnFileResourceNameChanging(string value);
    partial void OnFileResourceNameChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public oxite_FileResource()
		{
			this.Initialize();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileResourceID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid FileResourceID
		{
			get
			{
				return this._FileResourceID;
			}
			set
			{
				if ((this._FileResourceID != value))
				{
					this.OnFileResourceIDChanging(value);
					this.SendPropertyChanging();
					this._FileResourceID = value;
					this.SendPropertyChanged("FileResourceID");
					this.OnFileResourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileResourceName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string FileResourceName
		{
			get
			{
				return this._FileResourceName;
			}
			set
			{
				if ((this._FileResourceName != value))
				{
					this.OnFileResourceNameChanging(value);
					this.SendPropertyChanging();
					this._FileResourceName = value;
					this.SendPropertyChanged("FileResourceName");
					this.OnFileResourceNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=4)]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Data", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=5)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Path", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="TinyInt NOT NULL")]
		[DataMember(Order=8)]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=9)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=10)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_FileResource_oxite_UserFileResourceRelationship", Storage="_oxite_UserFileResourceRelationships", ThisKey="FileResourceID", OtherKey="FileResourceID")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<oxite_UserFileResourceRelationship> oxite_UserFileResourceRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_UserFileResourceRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_UserFileResourceRelationships;
			}
			set
			{
				this._oxite_UserFileResourceRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_FileResource", Storage="_oxite_User", ThisKey="CreatorUserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_FileResources.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_FileResources.Add(this);
						this._CreatorUserID = value.UserID;
					}
					else
					{
						this._CreatorUserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_UserFileResourceRelationships(oxite_UserFileResourceRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_FileResource = this;
		}
		
		private void detach_oxite_UserFileResourceRelationships(oxite_UserFileResourceRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_FileResource = null;
		}
		
		private void Initialize()
		{
			this._oxite_UserFileResourceRelationships = new EntitySet<oxite_UserFileResourceRelationship>(new Action<oxite_UserFileResourceRelationship>(this.attach_oxite_UserFileResourceRelationships), new Action<oxite_UserFileResourceRelationship>(this.detach_oxite_UserFileResourceRelationships));
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_StringResource")]
	[DataContract()]
	public partial class oxite_StringResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StringResourceKey;
		
		private string _Language;
		
		private short _Version;
		
		private string _StringResourceValue;
		
		private System.Guid _CreatorUserID;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<oxite_StringResourceVersion> _oxite_StringResourceVersions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStringResourceKeyChanging(string value);
    partial void OnStringResourceKeyChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnVersionChanging(short value);
    partial void OnVersionChanged();
    partial void OnStringResourceValueChanging(string value);
    partial void OnStringResourceValueChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public oxite_StringResource()
		{
			this.Initialize();
		}
		
		[Column(Storage="_StringResourceKey", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string StringResourceKey
		{
			get
			{
				return this._StringResourceKey;
			}
			set
			{
				if ((this._StringResourceKey != value))
				{
					this.OnStringResourceKeyChanging(value);
					this.SendPropertyChanging();
					this._StringResourceKey = value;
					this.SendPropertyChanged("StringResourceKey");
					this.OnStringResourceKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Language", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="SmallInt NOT NULL")]
		[DataMember(Order=3)]
		public short Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_StringResourceValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string StringResourceValue
		{
			get
			{
				return this._StringResourceValue;
			}
			set
			{
				if ((this._StringResourceValue != value))
				{
					this.OnStringResourceValueChanging(value);
					this.SendPropertyChanging();
					this._StringResourceValue = value;
					this.SendPropertyChanged("StringResourceValue");
					this.OnStringResourceValueChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=5)]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=6)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_StringResource_oxite_StringResourceVersion", Storage="_oxite_StringResourceVersions", ThisKey="StringResourceKey", OtherKey="StringResourceKey")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<oxite_StringResourceVersion> oxite_StringResourceVersions
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_StringResourceVersions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_StringResourceVersions;
			}
			set
			{
				this._oxite_StringResourceVersions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_StringResourceVersions(oxite_StringResourceVersion entity)
		{
			this.SendPropertyChanging();
			entity.oxite_StringResource = this;
		}
		
		private void detach_oxite_StringResourceVersions(oxite_StringResourceVersion entity)
		{
			this.SendPropertyChanging();
			entity.oxite_StringResource = null;
		}
		
		private void Initialize()
		{
			this._oxite_StringResourceVersions = new EntitySet<oxite_StringResourceVersion>(new Action<oxite_StringResourceVersion>(this.attach_oxite_StringResourceVersions), new Action<oxite_StringResourceVersion>(this.detach_oxite_StringResourceVersions));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_StringResourceVersion")]
	[DataContract()]
	public partial class oxite_StringResourceVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StringResourceKey;
		
		private string _Language;
		
		private short _Version;
		
		private string _StringResourceValue;
		
		private System.Guid _CreatorUserID;
		
		private System.DateTime _CreatedDate;
		
		private byte _State;
		
		private EntityRef<oxite_StringResource> _oxite_StringResource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStringResourceKeyChanging(string value);
    partial void OnStringResourceKeyChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnVersionChanging(short value);
    partial void OnVersionChanged();
    partial void OnStringResourceValueChanging(string value);
    partial void OnStringResourceValueChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    #endregion
		
		public oxite_StringResourceVersion()
		{
			this.Initialize();
		}
		
		[Column(Storage="_StringResourceKey", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string StringResourceKey
		{
			get
			{
				return this._StringResourceKey;
			}
			set
			{
				if ((this._StringResourceKey != value))
				{
					if (this._oxite_StringResource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStringResourceKeyChanging(value);
					this.SendPropertyChanging();
					this._StringResourceKey = value;
					this.SendPropertyChanged("StringResourceKey");
					this.OnStringResourceKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Language", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public short Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_StringResourceValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string StringResourceValue
		{
			get
			{
				return this._StringResourceValue;
			}
			set
			{
				if ((this._StringResourceValue != value))
				{
					this.OnStringResourceValueChanging(value);
					this.SendPropertyChanging();
					this._StringResourceValue = value;
					this.SendPropertyChanged("StringResourceValue");
					this.OnStringResourceValueChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=5)]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=6)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="TinyInt NOT NULL")]
		[DataMember(Order=7)]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Association(Name="oxite_StringResource_oxite_StringResourceVersion", Storage="_oxite_StringResource", ThisKey="StringResourceKey", OtherKey="StringResourceKey", IsForeignKey=true)]
		public oxite_StringResource oxite_StringResource
		{
			get
			{
				return this._oxite_StringResource.Entity;
			}
			set
			{
				oxite_StringResource previousValue = this._oxite_StringResource.Entity;
				if (((previousValue != value) 
							|| (this._oxite_StringResource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_StringResource.Entity = null;
						previousValue.oxite_StringResourceVersions.Remove(this);
					}
					this._oxite_StringResource.Entity = value;
					if ((value != null))
					{
						value.oxite_StringResourceVersions.Add(this);
						this._StringResourceKey = value.StringResourceKey;
					}
					else
					{
						this._StringResourceKey = default(string);
					}
					this.SendPropertyChanged("oxite_StringResource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_StringResource = default(EntityRef<oxite_StringResource>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_Trackback")]
	[DataContract()]
	public partial class oxite_Trackback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private System.Guid _TrackbackID;
		
		private string _Url;
		
		private string _Title;
		
		private string _Body;
		
		private string _Source;
		
		private string _BlogName;
		
		private System.Nullable<bool> _IsTargetInSource;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnTrackbackIDChanging(System.Guid value);
    partial void OnTrackbackIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnBlogNameChanging(string value);
    partial void OnBlogNameChanged();
    partial void OnIsTargetInSourceChanging(System.Nullable<bool> value);
    partial void OnIsTargetInSourceChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public oxite_Trackback()
		{
			this.Initialize();
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_TrackbackID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid TrackbackID
		{
			get
			{
				return this._TrackbackID;
			}
			set
			{
				if ((this._TrackbackID != value))
				{
					this.OnTrackbackIDChanging(value);
					this.SendPropertyChanging();
					this._TrackbackID = value;
					this.SendPropertyChanged("TrackbackID");
					this.OnTrackbackIDChanged();
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_BlogName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string BlogName
		{
			get
			{
				return this._BlogName;
			}
			set
			{
				if ((this._BlogName != value))
				{
					this.OnBlogNameChanging(value);
					this.SendPropertyChanging();
					this._BlogName = value;
					this.SendPropertyChanged("BlogName");
					this.OnBlogNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsTargetInSource", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> IsTargetInSource
		{
			get
			{
				return this._IsTargetInSource;
			}
			set
			{
				if ((this._IsTargetInSource != value))
				{
					this.OnIsTargetInSourceChanging(value);
					this.SendPropertyChanging();
					this._IsTargetInSource = value;
					this.SendPropertyChanged("IsTargetInSource");
					this.OnIsTargetInSourceChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=9)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=10)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_Trackback", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_Trackbacks.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_Trackbacks.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Post = default(EntityRef<oxite_Post>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_Subscription")]
	[DataContract()]
	public partial class oxite_Subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SubscriptionID;
		
		private System.Guid _PostID;
		
		private System.Guid _UserID;
		
		private EntityRef<oxite_SubscriptionAnonymous> _oxite_SubscriptionAnonymous;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
		private EntityRef<oxite_User> _oxite_User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriptionIDChanging(System.Guid value);
    partial void OnSubscriptionIDChanged();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public oxite_Subscription()
		{
			this.Initialize();
		}
		
		[Column(Storage="_SubscriptionID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					this.OnSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionID = value;
					this.SendPropertyChanged("SubscriptionID");
					this.OnSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=3)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Subscription_oxite_SubscriptionAnonymous", Storage="_oxite_SubscriptionAnonymous", ThisKey="SubscriptionID", OtherKey="SubscriptionID", IsUnique=true, IsForeignKey=false)]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public oxite_SubscriptionAnonymous oxite_SubscriptionAnonymous
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_SubscriptionAnonymous.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._oxite_SubscriptionAnonymous.Entity;
			}
			set
			{
				oxite_SubscriptionAnonymous previousValue = this._oxite_SubscriptionAnonymous.Entity;
				if (((previousValue != value) 
							|| (this._oxite_SubscriptionAnonymous.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_SubscriptionAnonymous.Entity = null;
						previousValue.oxite_Subscription = null;
					}
					this._oxite_SubscriptionAnonymous.Entity = value;
					if ((value != null))
					{
						value.oxite_Subscription = this;
					}
					this.SendPropertyChanged("oxite_SubscriptionAnonymous");
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_Subscription", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_Subscriptions.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_Subscriptions.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_Subscription", Storage="_oxite_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Subscriptions.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Subscriptions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_SubscriptionAnonymous = default(EntityRef<oxite_SubscriptionAnonymous>);
			this._oxite_Post = default(EntityRef<oxite_Post>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_Tag")]
	[DataContract()]
	public partial class oxite_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParentTagID;
		
		private System.Guid _TagID;
		
		private string _TagName;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<oxite_PostTagRelationship> _oxite_PostTagRelationships;
		
		private EntitySet<oxite_Tag> _oxite_Tags;
		
		private EntityRef<oxite_Tag> _oxite_Tag1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentTagIDChanging(System.Guid value);
    partial void OnParentTagIDChanged();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public oxite_Tag()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ParentTagID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ParentTagID
		{
			get
			{
				return this._ParentTagID;
			}
			set
			{
				if ((this._ParentTagID != value))
				{
					if (this._oxite_Tag1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentTagIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTagID = value;
					this.SendPropertyChanged("ParentTagID");
					this.OnParentTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=4)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Tag_oxite_PostTagRelationship", Storage="_oxite_PostTagRelationships", ThisKey="TagID", OtherKey="TagID")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<oxite_PostTagRelationship> oxite_PostTagRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_PostTagRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_PostTagRelationships;
			}
			set
			{
				this._oxite_PostTagRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Tag_oxite_Tag", Storage="_oxite_Tags", ThisKey="TagID", OtherKey="ParentTagID")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<oxite_Tag> oxite_Tags
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Tags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Tags;
			}
			set
			{
				this._oxite_Tags.Assign(value);
			}
		}
		
		[Association(Name="oxite_Tag_oxite_Tag", Storage="_oxite_Tag1", ThisKey="ParentTagID", OtherKey="TagID", IsForeignKey=true)]
		public oxite_Tag oxite_Tag1
		{
			get
			{
				return this._oxite_Tag1.Entity;
			}
			set
			{
				oxite_Tag previousValue = this._oxite_Tag1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Tag1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Tag1.Entity = null;
						previousValue.oxite_Tags.Remove(this);
					}
					this._oxite_Tag1.Entity = value;
					if ((value != null))
					{
						value.oxite_Tags.Add(this);
						this._ParentTagID = value.TagID;
					}
					else
					{
						this._ParentTagID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Tag1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag = this;
		}
		
		private void detach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag = null;
		}
		
		private void attach_oxite_Tags(oxite_Tag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag1 = this;
		}
		
		private void detach_oxite_Tags(oxite_Tag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag1 = null;
		}
		
		private void Initialize()
		{
			this._oxite_PostTagRelationships = new EntitySet<oxite_PostTagRelationship>(new Action<oxite_PostTagRelationship>(this.attach_oxite_PostTagRelationships), new Action<oxite_PostTagRelationship>(this.detach_oxite_PostTagRelationships));
			this._oxite_Tags = new EntitySet<oxite_Tag>(new Action<oxite_Tag>(this.attach_oxite_Tags), new Action<oxite_Tag>(this.detach_oxite_Tags));
			this._oxite_Tag1 = default(EntityRef<oxite_Tag>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_Message")]
	[DataContract()]
	public partial class oxite_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MessageID;
		
		private System.Guid _FromUserID;
		
		private string _Subject;
		
		private string _Body;
		
		private bool _IsSent;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		private EntitySet<oxite_CommentMessageRelationship> _oxite_CommentMessageRelationships;
		
		private EntityRef<oxite_MessageTo> _oxite_MessageTo;
		
		private EntitySet<oxite_MessageTo> _oxite_MessageTos;
		
		private EntityRef<oxite_User> _oxite_User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(System.Guid value);
    partial void OnMessageIDChanged();
    partial void OnFromUserIDChanging(System.Guid value);
    partial void OnFromUserIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnIsSentChanging(bool value);
    partial void OnIsSentChanged();
    partial void OnSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSentDateChanged();
    #endregion
		
		public oxite_Message()
		{
			this.Initialize();
		}
		
		[Column(Storage="_MessageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[Column(Storage="_FromUserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_IsSent", DbType="Bit NOT NULL")]
		[DataMember(Order=5)]
		public bool IsSent
		{
			get
			{
				return this._IsSent;
			}
			set
			{
				if ((this._IsSent != value))
				{
					this.OnIsSentChanging(value);
					this.SendPropertyChanging();
					this._IsSent = value;
					this.SendPropertyChanged("IsSent");
					this.OnIsSentChanged();
				}
			}
		}
		
		[Column(Storage="_SentDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Message_oxite_CommentMessageRelationship", Storage="_oxite_CommentMessageRelationships", ThisKey="MessageID", OtherKey="MessageID")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<oxite_CommentMessageRelationship> oxite_CommentMessageRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_CommentMessageRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_CommentMessageRelationships;
			}
			set
			{
				this._oxite_CommentMessageRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Message_oxite_MessageTo", Storage="_oxite_MessageTo", ThisKey="MessageID", OtherKey="MessageToID", IsUnique=true, IsForeignKey=false)]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public oxite_MessageTo oxite_MessageTo
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_MessageTo.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._oxite_MessageTo.Entity;
			}
			set
			{
				oxite_MessageTo previousValue = this._oxite_MessageTo.Entity;
				if (((previousValue != value) 
							|| (this._oxite_MessageTo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_MessageTo.Entity = null;
						previousValue.oxite_Message = null;
					}
					this._oxite_MessageTo.Entity = value;
					if ((value != null))
					{
						value.oxite_Message = this;
					}
					this.SendPropertyChanged("oxite_MessageTo");
				}
			}
		}
		
		[Association(Name="oxite_Message_oxite_MessageTo1", Storage="_oxite_MessageTos", ThisKey="MessageID", OtherKey="MessageID")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<oxite_MessageTo> oxite_MessageTos
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_MessageTos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_MessageTos;
			}
			set
			{
				this._oxite_MessageTos.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Message", Storage="_oxite_User", ThisKey="FromUserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Messages.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Messages.Add(this);
						this._FromUserID = value.UserID;
					}
					else
					{
						this._FromUserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_CommentMessageRelationships(oxite_CommentMessageRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Message = this;
		}
		
		private void detach_oxite_CommentMessageRelationships(oxite_CommentMessageRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Message = null;
		}
		
		private void attach_oxite_MessageTos(oxite_MessageTo entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Message1 = this;
		}
		
		private void detach_oxite_MessageTos(oxite_MessageTo entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Message1 = null;
		}
		
		private void Initialize()
		{
			this._oxite_CommentMessageRelationships = new EntitySet<oxite_CommentMessageRelationship>(new Action<oxite_CommentMessageRelationship>(this.attach_oxite_CommentMessageRelationships), new Action<oxite_CommentMessageRelationship>(this.detach_oxite_CommentMessageRelationships));
			this._oxite_MessageTo = default(EntityRef<oxite_MessageTo>);
			this._oxite_MessageTos = new EntitySet<oxite_MessageTo>(new Action<oxite_MessageTo>(this.attach_oxite_MessageTos), new Action<oxite_MessageTo>(this.detach_oxite_MessageTos));
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_MessageToAnonymous")]
	[DataContract()]
	public partial class oxite_MessageToAnonymous : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MessageToID;
		
		private string _Name;
		
		private string _Email;
		
		private EntityRef<oxite_MessageTo> _oxite_MessageTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageToIDChanging(System.Guid value);
    partial void OnMessageToIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public oxite_MessageToAnonymous()
		{
			this.Initialize();
		}
		
		[Column(Storage="_MessageToID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid MessageToID
		{
			get
			{
				return this._MessageToID;
			}
			set
			{
				if ((this._MessageToID != value))
				{
					if (this._oxite_MessageTo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageToIDChanging(value);
					this.SendPropertyChanging();
					this._MessageToID = value;
					this.SendPropertyChanged("MessageToID");
					this.OnMessageToIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Association(Name="oxite_MessageTo_oxite_MessageToAnonymous", Storage="_oxite_MessageTo", ThisKey="MessageToID", OtherKey="MessageToID", IsForeignKey=true)]
		public oxite_MessageTo oxite_MessageTo
		{
			get
			{
				return this._oxite_MessageTo.Entity;
			}
			set
			{
				oxite_MessageTo previousValue = this._oxite_MessageTo.Entity;
				if (((previousValue != value) 
							|| (this._oxite_MessageTo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_MessageTo.Entity = null;
						previousValue.oxite_MessageToAnonymous = null;
					}
					this._oxite_MessageTo.Entity = value;
					if ((value != null))
					{
						value.oxite_MessageToAnonymous = this;
						this._MessageToID = value.MessageToID;
					}
					else
					{
						this._MessageToID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_MessageTo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_MessageTo = default(EntityRef<oxite_MessageTo>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_MessageTo")]
	[DataContract()]
	public partial class oxite_MessageTo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MessageID;
		
		private System.Guid _MessageToID;
		
		private System.Guid _UserID;
		
		private EntityRef<oxite_MessageToAnonymous> _oxite_MessageToAnonymous;
		
		private EntityRef<oxite_Message> _oxite_Message;
		
		private EntityRef<oxite_Message> _oxite_Message1;
		
		private EntityRef<oxite_User> _oxite_User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(System.Guid value);
    partial void OnMessageIDChanged();
    partial void OnMessageToIDChanging(System.Guid value);
    partial void OnMessageToIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public oxite_MessageTo()
		{
			this.Initialize();
		}
		
		[Column(Storage="_MessageID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					if (this._oxite_Message1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageToID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid MessageToID
		{
			get
			{
				return this._MessageToID;
			}
			set
			{
				if ((this._MessageToID != value))
				{
					if (this._oxite_Message.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageToIDChanging(value);
					this.SendPropertyChanging();
					this._MessageToID = value;
					this.SendPropertyChanged("MessageToID");
					this.OnMessageToIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=3)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_MessageTo_oxite_MessageToAnonymous", Storage="_oxite_MessageToAnonymous", ThisKey="MessageToID", OtherKey="MessageToID", IsUnique=true, IsForeignKey=false)]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public oxite_MessageToAnonymous oxite_MessageToAnonymous
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_MessageToAnonymous.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._oxite_MessageToAnonymous.Entity;
			}
			set
			{
				oxite_MessageToAnonymous previousValue = this._oxite_MessageToAnonymous.Entity;
				if (((previousValue != value) 
							|| (this._oxite_MessageToAnonymous.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_MessageToAnonymous.Entity = null;
						previousValue.oxite_MessageTo = null;
					}
					this._oxite_MessageToAnonymous.Entity = value;
					if ((value != null))
					{
						value.oxite_MessageTo = this;
					}
					this.SendPropertyChanged("oxite_MessageToAnonymous");
				}
			}
		}
		
		[Association(Name="oxite_Message_oxite_MessageTo", Storage="_oxite_Message", ThisKey="MessageToID", OtherKey="MessageID", IsForeignKey=true)]
		public oxite_Message oxite_Message
		{
			get
			{
				return this._oxite_Message.Entity;
			}
			set
			{
				oxite_Message previousValue = this._oxite_Message.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Message.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Message.Entity = null;
						previousValue.oxite_MessageTo = null;
					}
					this._oxite_Message.Entity = value;
					if ((value != null))
					{
						value.oxite_MessageTo = this;
						this._MessageToID = value.MessageID;
					}
					else
					{
						this._MessageToID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Message");
				}
			}
		}
		
		[Association(Name="oxite_Message_oxite_MessageTo1", Storage="_oxite_Message1", ThisKey="MessageID", OtherKey="MessageID", IsForeignKey=true)]
		public oxite_Message oxite_Message1
		{
			get
			{
				return this._oxite_Message1.Entity;
			}
			set
			{
				oxite_Message previousValue = this._oxite_Message1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Message1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Message1.Entity = null;
						previousValue.oxite_MessageTos.Remove(this);
					}
					this._oxite_Message1.Entity = value;
					if ((value != null))
					{
						value.oxite_MessageTos.Add(this);
						this._MessageID = value.MessageID;
					}
					else
					{
						this._MessageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Message1");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_MessageTo", Storage="_oxite_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_MessageTos.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_MessageTos.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_MessageToAnonymous = default(EntityRef<oxite_MessageToAnonymous>);
			this._oxite_Message = default(EntityRef<oxite_Message>);
			this._oxite_Message1 = default(EntityRef<oxite_Message>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_Language")]
	[DataContract()]
	public partial class oxite_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LanguageID;
		
		private string _LanguageName;
		
		private string _LanguageDisplayName;
		
		private EntitySet<oxite_UserLanguage> _oxite_UserLanguages;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntitySet<oxite_User> _oxite_Users;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    partial void OnLanguageDisplayNameChanging(string value);
    partial void OnLanguageDisplayNameChanged();
    #endregion
		
		public oxite_Language()
		{
			this.Initialize();
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageName", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string LanguageDisplayName
		{
			get
			{
				return this._LanguageDisplayName;
			}
			set
			{
				if ((this._LanguageDisplayName != value))
				{
					this.OnLanguageDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageDisplayName = value;
					this.SendPropertyChanged("LanguageDisplayName");
					this.OnLanguageDisplayNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_Language_oxite_UserLanguage", Storage="_oxite_UserLanguages", ThisKey="LanguageID", OtherKey="LanguageID")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<oxite_UserLanguage> oxite_UserLanguages
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_UserLanguages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_UserLanguages;
			}
			set
			{
				this._oxite_UserLanguages.Assign(value);
			}
		}
		
		[Association(Name="oxite_Language_oxite_Comment", Storage="_oxite_Comments", ThisKey="LanguageID", OtherKey="LanguageID")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Comments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Language_oxite_User", Storage="_oxite_Users", ThisKey="LanguageID", OtherKey="DefaultLanguageID")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<oxite_User> oxite_Users
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Users.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Users;
			}
			set
			{
				this._oxite_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_UserLanguages(oxite_UserLanguage entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = this;
		}
		
		private void detach_oxite_UserLanguages(oxite_UserLanguage entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = null;
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = null;
		}
		
		private void attach_oxite_Users(oxite_User entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = this;
		}
		
		private void detach_oxite_Users(oxite_User entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = null;
		}
		
		private void Initialize()
		{
			this._oxite_UserLanguages = new EntitySet<oxite_UserLanguage>(new Action<oxite_UserLanguage>(this.attach_oxite_UserLanguages), new Action<oxite_UserLanguage>(this.detach_oxite_UserLanguages));
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Users = new EntitySet<oxite_User>(new Action<oxite_User>(this.attach_oxite_Users), new Action<oxite_User>(this.detach_oxite_Users));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_UserLanguage")]
	[DataContract()]
	public partial class oxite_UserLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private System.Guid _LanguageID;
		
		private EntityRef<oxite_Language> _oxite_Language;
		
		private EntityRef<oxite_User> _oxite_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    #endregion
		
		public oxite_UserLanguage()
		{
			this.Initialize();
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._oxite_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Language_oxite_UserLanguage", Storage="_oxite_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public oxite_Language oxite_Language
		{
			get
			{
				return this._oxite_Language.Entity;
			}
			set
			{
				oxite_Language previousValue = this._oxite_Language.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Language.Entity = null;
						previousValue.oxite_UserLanguages.Remove(this);
					}
					this._oxite_Language.Entity = value;
					if ((value != null))
					{
						value.oxite_UserLanguages.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Language");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_UserLanguage", Storage="_oxite_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_UserLanguages.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_UserLanguages.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Language = default(EntityRef<oxite_Language>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_CommentAnonymous")]
	[DataContract()]
	public partial class oxite_CommentAnonymous : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CommentID;
		
		private string _Name;
		
		private string _Email;
		
		private string _HashedEmail;
		
		private string _Url;
		
		private EntityRef<oxite_Comment> _oxite_Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHashedEmailChanging(string value);
    partial void OnHashedEmailChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public oxite_CommentAnonymous()
		{
			this.Initialize();
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._oxite_Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_HashedEmail", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string HashedEmail
		{
			get
			{
				return this._HashedEmail;
			}
			set
			{
				if ((this._HashedEmail != value))
				{
					this.OnHashedEmailChanging(value);
					this.SendPropertyChanging();
					this._HashedEmail = value;
					this.SendPropertyChanged("HashedEmail");
					this.OnHashedEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[Association(Name="oxite_Comment_oxite_CommentAnonymous", Storage="_oxite_Comment", ThisKey="CommentID", OtherKey="CommentID", IsForeignKey=true)]
		public oxite_Comment oxite_Comment
		{
			get
			{
				return this._oxite_Comment.Entity;
			}
			set
			{
				oxite_Comment previousValue = this._oxite_Comment.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Comment.Entity = null;
						previousValue.oxite_CommentAnonymous = null;
					}
					this._oxite_Comment.Entity = value;
					if ((value != null))
					{
						value.oxite_CommentAnonymous = this;
						this._CommentID = value.CommentID;
					}
					else
					{
						this._CommentID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Comment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Comment = default(EntityRef<oxite_Comment>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_Comment")]
	[DataContract()]
	public partial class oxite_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private System.Guid _CommentID;
		
		private System.Guid _CreatorUserID;
		
		private System.Guid _LanguageID;
		
		private long _CreatorIP;
		
		private string _UserAgent;
		
		private string _Body;
		
		private System.DateTime _PublishedDate;
		
		private byte _State;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<oxite_CommentMessageRelationship> _oxite_CommentMessageRelationships;
		
		private EntitySet<oxite_CommentRelationship> _oxite_CommentRelationships;
		
		private EntityRef<oxite_CommentAnonymous> _oxite_CommentAnonymous;
		
		private EntityRef<oxite_Language> _oxite_Language;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
		private EntityRef<oxite_User> _oxite_User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnCreatorIPChanging(long value);
    partial void OnCreatorIPChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnPublishedDateChanging(System.DateTime value);
    partial void OnPublishedDateChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public oxite_Comment()
		{
			this.Initialize();
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=3)]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=4)]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._oxite_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorIP", DbType="BigInt NOT NULL")]
		[DataMember(Order=5)]
		public long CreatorIP
		{
			get
			{
				return this._CreatorIP;
			}
			set
			{
				if ((this._CreatorIP != value))
				{
					this.OnCreatorIPChanging(value);
					this.SendPropertyChanging();
					this._CreatorIP = value;
					this.SendPropertyChanged("CreatorIP");
					this.OnCreatorIPChanged();
				}
			}
		}
		
		[Column(Storage="_UserAgent", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_PublishedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime PublishedDate
		{
			get
			{
				return this._PublishedDate;
			}
			set
			{
				if ((this._PublishedDate != value))
				{
					this.OnPublishedDateChanging(value);
					this.SendPropertyChanging();
					this._PublishedDate = value;
					this.SendPropertyChanged("PublishedDate");
					this.OnPublishedDateChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="TinyInt NOT NULL")]
		[DataMember(Order=9)]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=10)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=11)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Comment_oxite_CommentMessageRelationship", Storage="_oxite_CommentMessageRelationships", ThisKey="CommentID", OtherKey="CommentID")]
		[DataMember(Order=12, EmitDefaultValue=false)]
		public EntitySet<oxite_CommentMessageRelationship> oxite_CommentMessageRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_CommentMessageRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_CommentMessageRelationships;
			}
			set
			{
				this._oxite_CommentMessageRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Comment_oxite_CommentRelationship", Storage="_oxite_CommentRelationships", ThisKey="CommentID", OtherKey="CommentID")]
		[DataMember(Order=13, EmitDefaultValue=false)]
		public EntitySet<oxite_CommentRelationship> oxite_CommentRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_CommentRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_CommentRelationships;
			}
			set
			{
				this._oxite_CommentRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Comment_oxite_CommentAnonymous", Storage="_oxite_CommentAnonymous", ThisKey="CommentID", OtherKey="CommentID", IsUnique=true, IsForeignKey=false)]
		[DataMember(Order=14, EmitDefaultValue=false)]
		public oxite_CommentAnonymous oxite_CommentAnonymous
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_CommentAnonymous.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._oxite_CommentAnonymous.Entity;
			}
			set
			{
				oxite_CommentAnonymous previousValue = this._oxite_CommentAnonymous.Entity;
				if (((previousValue != value) 
							|| (this._oxite_CommentAnonymous.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_CommentAnonymous.Entity = null;
						previousValue.oxite_Comment = null;
					}
					this._oxite_CommentAnonymous.Entity = value;
					if ((value != null))
					{
						value.oxite_Comment = this;
					}
					this.SendPropertyChanged("oxite_CommentAnonymous");
				}
			}
		}
		
		[Association(Name="oxite_Language_oxite_Comment", Storage="_oxite_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public oxite_Language oxite_Language
		{
			get
			{
				return this._oxite_Language.Entity;
			}
			set
			{
				oxite_Language previousValue = this._oxite_Language.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Language.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_Language.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Language");
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_Comment", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_Comment", Storage="_oxite_User", ThisKey="CreatorUserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._CreatorUserID = value.UserID;
					}
					else
					{
						this._CreatorUserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_CommentMessageRelationships(oxite_CommentMessageRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment = this;
		}
		
		private void detach_oxite_CommentMessageRelationships(oxite_CommentMessageRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment = null;
		}
		
		private void attach_oxite_CommentRelationships(oxite_CommentRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment = this;
		}
		
		private void detach_oxite_CommentRelationships(oxite_CommentRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment = null;
		}
		
		private void Initialize()
		{
			this._oxite_CommentMessageRelationships = new EntitySet<oxite_CommentMessageRelationship>(new Action<oxite_CommentMessageRelationship>(this.attach_oxite_CommentMessageRelationships), new Action<oxite_CommentMessageRelationship>(this.detach_oxite_CommentMessageRelationships));
			this._oxite_CommentRelationships = new EntitySet<oxite_CommentRelationship>(new Action<oxite_CommentRelationship>(this.attach_oxite_CommentRelationships), new Action<oxite_CommentRelationship>(this.detach_oxite_CommentRelationships));
			this._oxite_CommentAnonymous = default(EntityRef<oxite_CommentAnonymous>);
			this._oxite_Language = default(EntityRef<oxite_Language>);
			this._oxite_Post = default(EntityRef<oxite_Post>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_User")]
	[DataContract()]
	public partial class oxite_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _Username;
		
		private string _DisplayName;
		
		private string _Email;
		
		private string _HashedEmail;
		
		private string _Password;
		
		private string _PasswordSalt;
		
		private System.Guid _DefaultLanguageID;
		
		private byte _Status;
		
		private EntitySet<oxite_UserRoleRelationship> _oxite_UserRoleRelationships;
		
		private EntitySet<oxite_UserFileResourceRelationship> _oxite_UserFileResourceRelationships;
		
		private EntitySet<oxite_Post> _oxite_Posts;
		
		private EntitySet<oxite_FileResource> _oxite_FileResources;
		
		private EntitySet<oxite_Subscription> _oxite_Subscriptions;
		
		private EntitySet<oxite_Message> _oxite_Messages;
		
		private EntitySet<oxite_MessageTo> _oxite_MessageTos;
		
		private EntitySet<oxite_UserLanguage> _oxite_UserLanguages;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntityRef<oxite_Language> _oxite_Language;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHashedEmailChanging(string value);
    partial void OnHashedEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnDefaultLanguageIDChanging(System.Guid value);
    partial void OnDefaultLanguageIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public oxite_User()
		{
			this.Initialize();
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_HashedEmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string HashedEmail
		{
			get
			{
				return this._HashedEmail;
			}
			set
			{
				if ((this._HashedEmail != value))
				{
					this.OnHashedEmailChanging(value);
					this.SendPropertyChanging();
					this._HashedEmail = value;
					this.SendPropertyChanged("HashedEmail");
					this.OnHashedEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultLanguageID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=8)]
		public System.Guid DefaultLanguageID
		{
			get
			{
				return this._DefaultLanguageID;
			}
			set
			{
				if ((this._DefaultLanguageID != value))
				{
					if (this._oxite_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageID = value;
					this.SendPropertyChanged("DefaultLanguageID");
					this.OnDefaultLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		[DataMember(Order=9)]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_UserRoleRelationship", Storage="_oxite_UserRoleRelationships", ThisKey="UserID", OtherKey="UserID")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<oxite_UserRoleRelationship> oxite_UserRoleRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_UserRoleRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_UserRoleRelationships;
			}
			set
			{
				this._oxite_UserRoleRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_UserFileResourceRelationship", Storage="_oxite_UserFileResourceRelationships", ThisKey="UserID", OtherKey="UserID")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<oxite_UserFileResourceRelationship> oxite_UserFileResourceRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_UserFileResourceRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_UserFileResourceRelationships;
			}
			set
			{
				this._oxite_UserFileResourceRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Post", Storage="_oxite_Posts", ThisKey="UserID", OtherKey="CreatorUserID")]
		[DataMember(Order=12, EmitDefaultValue=false)]
		public EntitySet<oxite_Post> oxite_Posts
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Posts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Posts;
			}
			set
			{
				this._oxite_Posts.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_FileResource", Storage="_oxite_FileResources", ThisKey="UserID", OtherKey="CreatorUserID")]
		[DataMember(Order=13, EmitDefaultValue=false)]
		public EntitySet<oxite_FileResource> oxite_FileResources
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_FileResources.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_FileResources;
			}
			set
			{
				this._oxite_FileResources.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Subscription", Storage="_oxite_Subscriptions", ThisKey="UserID", OtherKey="UserID")]
		[DataMember(Order=14, EmitDefaultValue=false)]
		public EntitySet<oxite_Subscription> oxite_Subscriptions
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Subscriptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Subscriptions;
			}
			set
			{
				this._oxite_Subscriptions.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Message", Storage="_oxite_Messages", ThisKey="UserID", OtherKey="FromUserID")]
		[DataMember(Order=15, EmitDefaultValue=false)]
		public EntitySet<oxite_Message> oxite_Messages
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Messages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Messages;
			}
			set
			{
				this._oxite_Messages.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_MessageTo", Storage="_oxite_MessageTos", ThisKey="UserID", OtherKey="UserID")]
		[DataMember(Order=16, EmitDefaultValue=false)]
		public EntitySet<oxite_MessageTo> oxite_MessageTos
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_MessageTos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_MessageTos;
			}
			set
			{
				this._oxite_MessageTos.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_UserLanguage", Storage="_oxite_UserLanguages", ThisKey="UserID", OtherKey="UserID")]
		[DataMember(Order=17, EmitDefaultValue=false)]
		public EntitySet<oxite_UserLanguage> oxite_UserLanguages
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_UserLanguages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_UserLanguages;
			}
			set
			{
				this._oxite_UserLanguages.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Comment", Storage="_oxite_Comments", ThisKey="UserID", OtherKey="CreatorUserID")]
		[DataMember(Order=18, EmitDefaultValue=false)]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_Comments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Language_oxite_User", Storage="_oxite_Language", ThisKey="DefaultLanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public oxite_Language oxite_Language
		{
			get
			{
				return this._oxite_Language.Entity;
			}
			set
			{
				oxite_Language previousValue = this._oxite_Language.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Language.Entity = null;
						previousValue.oxite_Users.Remove(this);
					}
					this._oxite_Language.Entity = value;
					if ((value != null))
					{
						value.oxite_Users.Add(this);
						this._DefaultLanguageID = value.LanguageID;
					}
					else
					{
						this._DefaultLanguageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_UserRoleRelationships(oxite_UserRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_UserRoleRelationships(oxite_UserRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_UserFileResourceRelationships(oxite_UserFileResourceRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_UserFileResourceRelationships(oxite_UserFileResourceRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_Posts(oxite_Post entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Posts(oxite_Post entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_FileResources(oxite_FileResource entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_FileResources(oxite_FileResource entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_Subscriptions(oxite_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Subscriptions(oxite_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_Messages(oxite_Message entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Messages(oxite_Message entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_MessageTos(oxite_MessageTo entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_MessageTos(oxite_MessageTo entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_UserLanguages(oxite_UserLanguage entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_UserLanguages(oxite_UserLanguage entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void Initialize()
		{
			this._oxite_UserRoleRelationships = new EntitySet<oxite_UserRoleRelationship>(new Action<oxite_UserRoleRelationship>(this.attach_oxite_UserRoleRelationships), new Action<oxite_UserRoleRelationship>(this.detach_oxite_UserRoleRelationships));
			this._oxite_UserFileResourceRelationships = new EntitySet<oxite_UserFileResourceRelationship>(new Action<oxite_UserFileResourceRelationship>(this.attach_oxite_UserFileResourceRelationships), new Action<oxite_UserFileResourceRelationship>(this.detach_oxite_UserFileResourceRelationships));
			this._oxite_Posts = new EntitySet<oxite_Post>(new Action<oxite_Post>(this.attach_oxite_Posts), new Action<oxite_Post>(this.detach_oxite_Posts));
			this._oxite_FileResources = new EntitySet<oxite_FileResource>(new Action<oxite_FileResource>(this.attach_oxite_FileResources), new Action<oxite_FileResource>(this.detach_oxite_FileResources));
			this._oxite_Subscriptions = new EntitySet<oxite_Subscription>(new Action<oxite_Subscription>(this.attach_oxite_Subscriptions), new Action<oxite_Subscription>(this.detach_oxite_Subscriptions));
			this._oxite_Messages = new EntitySet<oxite_Message>(new Action<oxite_Message>(this.attach_oxite_Messages), new Action<oxite_Message>(this.detach_oxite_Messages));
			this._oxite_MessageTos = new EntitySet<oxite_MessageTo>(new Action<oxite_MessageTo>(this.attach_oxite_MessageTos), new Action<oxite_MessageTo>(this.detach_oxite_MessageTos));
			this._oxite_UserLanguages = new EntitySet<oxite_UserLanguage>(new Action<oxite_UserLanguage>(this.attach_oxite_UserLanguages), new Action<oxite_UserLanguage>(this.detach_oxite_UserLanguages));
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Language = default(EntityRef<oxite_Language>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.oxite_PostRelationship")]
	[DataContract()]
	public partial class oxite_PostRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private System.Guid _ParentPostID;
		
		private System.Guid _PostID;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
		private EntityRef<oxite_Post> _oxite_Post1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnParentPostIDChanging(System.Guid value);
    partial void OnParentPostIDChanged();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    #endregion
		
		public oxite_PostRelationship()
		{
			this.Initialize();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_ParentPostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid ParentPostID
		{
			get
			{
				return this._ParentPostID;
			}
			set
			{
				if ((this._ParentPostID != value))
				{
					if (this._oxite_Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentPostIDChanging(value);
					this.SendPropertyChanging();
					this._ParentPostID = value;
					this.SendPropertyChanged("ParentPostID");
					this.OnParentPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostRelationship", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_PostRelationships.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_PostRelationships.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostRelationship1", Storage="_oxite_Post1", ThisKey="ParentPostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post1
		{
			get
			{
				return this._oxite_Post1.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post1.Entity = null;
						previousValue.oxite_PostRelationships1.Remove(this);
					}
					this._oxite_Post1.Entity = value;
					if ((value != null))
					{
						value.oxite_PostRelationships1.Add(this);
						this._ParentPostID = value.PostID;
					}
					else
					{
						this._ParentPostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._oxite_Post = default(EntityRef<oxite_Post>);
			this._oxite_Post1 = default(EntityRef<oxite_Post>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.oxite_Area")]
	[DataContract()]
	public partial class oxite_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private System.Guid _AreaID;
		
		private string _AreaName;
		
		private string _DisplayName;
		
		private string _Description;
		
		private string _Type;
		
		private string _TypeUrl;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<oxite_AreaRoleRelationship> _oxite_AreaRoleRelationships;
		
		private EntitySet<oxite_PostAreaRelationship> _oxite_PostAreaRelationships;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnAreaIDChanging(System.Guid value);
    partial void OnAreaIDChanged();
    partial void OnAreaNameChanging(string value);
    partial void OnAreaNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTypeUrlChanging(string value);
    partial void OnTypeUrlChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public oxite_Area()
		{
			this.Initialize();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_AreaID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[Column(Storage="_AreaName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this.OnAreaNameChanging(value);
					this.SendPropertyChanging();
					this._AreaName = value;
					this.SendPropertyChanged("AreaName");
					this.OnAreaNameChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_TypeUrl", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string TypeUrl
		{
			get
			{
				return this._TypeUrl;
			}
			set
			{
				if ((this._TypeUrl != value))
				{
					this.OnTypeUrlChanging(value);
					this.SendPropertyChanging();
					this._TypeUrl = value;
					this.SendPropertyChanged("TypeUrl");
					this.OnTypeUrlChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=9)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Area_oxite_AreaRoleRelationship", Storage="_oxite_AreaRoleRelationships", ThisKey="AreaID", OtherKey="AreaID")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<oxite_AreaRoleRelationship> oxite_AreaRoleRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_AreaRoleRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_AreaRoleRelationships;
			}
			set
			{
				this._oxite_AreaRoleRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Area_oxite_PostAreaRelationship", Storage="_oxite_PostAreaRelationships", ThisKey="AreaID", OtherKey="AreaID")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<oxite_PostAreaRelationship> oxite_PostAreaRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._oxite_PostAreaRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._oxite_PostAreaRelationships;
			}
			set
			{
				this._oxite_PostAreaRelationships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_AreaRoleRelationships(oxite_AreaRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Area = this;
		}
		
		private void detach_oxite_AreaRoleRelationships(oxite_AreaRoleRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Area = null;
		}
		
		private void attach_oxite_PostAreaRelationships(oxite_PostAreaRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Area = this;
		}
		
		private void detach_oxite_PostAreaRelationships(oxite_PostAreaRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Area = null;
		}
		
		private void Initialize()
		{
			this._oxite_AreaRoleRelationships = new EntitySet<oxite_AreaRoleRelationship>(new Action<oxite_AreaRoleRelationship>(this.attach_oxite_AreaRoleRelationships), new Action<oxite_AreaRoleRelationship>(this.detach_oxite_AreaRoleRelationships));
			this._oxite_PostAreaRelationships = new EntitySet<oxite_PostAreaRelationship>(new Action<oxite_PostAreaRelationship>(this.attach_oxite_PostAreaRelationships), new Action<oxite_PostAreaRelationship>(this.detach_oxite_PostAreaRelationships));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[DataContract()]
	public partial class oxite_GetRecentlyPublishedPostsAndBackgroundServiceActionsResult
	{
		
		private System.Guid _PostID;
		
		private System.Nullable<System.Guid> _BackgroundServiceActionID;
		
		public oxite_GetRecentlyPublishedPostsAndBackgroundServiceActionsResult()
		{
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this._PostID = value;
				}
			}
		}
		
		[Column(Storage="_BackgroundServiceActionID", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> BackgroundServiceActionID
		{
			get
			{
				return this._BackgroundServiceActionID;
			}
			set
			{
				if ((this._BackgroundServiceActionID != value))
				{
					this._BackgroundServiceActionID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
